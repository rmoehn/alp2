Tests für die Funktionen aus ``binomk``
==========================================================

>>> from binomk import *

Fakultätsfunktion testen

>>> fac_iter(0)
1
>>> fac_iter(1)
1
>>> fac_iter(2)
2
>>> fac_iter(6)
720
>>> fac_iter(10)
3628800
>>> fac_iter(33)
8683317618811886495518194401280000000
>>> fac_iter(50)
30414093201713378043612608166064768844377641568960512000000000000
>>> fac_iter(100)
93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000
>>> fac_iter(4.78)
Traceback (most recent call last):
    ...
Exception: Wir berechnen nur Fakultäten von natürlichen Zahlen. Für andere Zahlenbereiche ist die Gammafunktion zu verwenden.

Damit wissen wir, dass Fehleingaben überhaupt getestet werden und nehmen an,
dass die externe Testfunktion ordentlich arbeitet.

Naive Binomialkoeffizientenfunktion testen

>>> binomk_naiv(0,0)
1
>>> binomk_naiv(13,0)
1
>>> binomk_naiv(3,20)
0
>>> binomk_naiv(13, 13)
1
>>> binomk_naiv(24, 24)
1
>>> binomk_naiv(7, 1)
7
>>> binomk_naiv(34, 5)
278256
>>> binomk_naiv(34, 29)
278256

Rekursive Binomialkoeffizientenfunktion testen

>>> binomk_rek(0,0)
1
>>> binomk_rek(13,0)
1
>>> binomk_rek(3,20)
0
>>> binomk_rek(13, 13)
1
>>> binomk_rek(24, 24)
1
>>> binomk_rek(7, 1)
7
>>> binomk_rek(34, 5)
278256
>>> binomk_rek(34, 29)  # dauert recht lange
278256

Iterative Binomialkoeffizientenfunktion testen

>>> binomk_iter(0,0)
1
>>> binomk_iter(13,0)
1
>>> binomk_iter(3,20)
0
>>> binomk_iter(13, 13)
1
>>> binomk_iter(24, 24)
1
>>> binomk_iter(7, 1)
7
>>> binomk_iter(34, 5)
278256
>>> binomk_iter(34, 29)
278256
